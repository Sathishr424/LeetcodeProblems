# Last updated: 16/10/2025, 9:05:18 pm
class Solution:
    def isBipartite(self, graph: List[List[int]]) -> bool:
        n = len(graph)
        visited = [-1] * n

        def dfs(x, d):
            if visited[x] != -1: return True
            visited[x] = d
            for y in graph[x]:
                if visited[y] != -1 and (d - visited[y] + 1) % 2: return False
                if not dfs(y, d + 1): return False
            
            return True

        for i in range(n):
            if visited[i] == -1:
                if not dfs(i, 0):
                    return False

        return True